{
  "pages": [
    {
      "title": "Application Details",
      "questions": [
        {
          "name": "DEVOWNER",
          "title": "Does the application development team understand and actively develop the application?",
          "tooltip": "sample tooltip",
          "choices": [
            "0-UNKNOWN|Unknown",
            "1-RED|External 3rd party or COTS application ",
            "2-RED|In maintenance mode, no app SME knowledge, poor documentation",
            "3-AMBER|Maintenance mode, SME knowledge available",
            "4-GREEN|Actively developed, SME knowledge available",
            "5-GREEN|New Greenfield application"
          ]
        },
        {
          "name": "OPSOWNER",
          "title": "How is the application supported in Production?",
          "tooltip": "sample tooltip",
          "choices": [
            "0-UNKNOWN|Unknown",
            "1-RED|Application production support outsourced to 3rd party support provider. Ticket driven escalation process, no inhouse support resources.",
            "2-RED|Production support provided by separate internal team, little interaction with development team.",
            "3-AMBER|Multiple teams support the application using an established escalation model",
            "4-GREEN|SRE based approach with knowledgeable and experienced operations team",
            "5-GREEN|Pure DevOps model, the team that builds it is responsible for running it in Production"
          ]
        },
        {
          "name": "LEADTIME",
          "title": "How long does it take from when code is committed to it being deployed to a stage that is production ready?",
          "tooltip": "sample tooltip",
          "choices": [
            "0-UNKNOWN|Unknown",
            "1-RED|More than six months",
            "2-AMBER|Between one month and six months",
            "3-GREEN|Between one week and one month",
            "4-GREEN|Between one day and one week",
            "5-GREEN|Less than one day"
          ]
        },
        {
          "name": "DEPLOYFREQ",
          "title": "Deployment frequency",
          "comment": "How often is the application deployed to production?",
          "tooltip": "sample tooltip",
          "choices": [
            "0-UNKNOWN|Unknown",
            "1-RED|Greater than once every six months",
            "2-AMBER|Between once per month and once every six months",
            "3-GREEN|Weekly deployments",
            "4-GREEN|Daily deployments",
            "5-GREEN|On demand (multiple deploys per day)"
          ]
        },
        {
          "name": "MTTR",
          "title": "What is the Mean Time to Recover (MTTR) when a fault is found with the application in production?",
          "tooltip": "sample tooltip",
          "choices": [
            "0-UNKNOWN|Unknown",
            "1-RED|One month or greater",
            "2-AMBER|Between one week and one month",
            "3-AMBER|Between one day and one week",
            "4-GREEN|Between one hour and one day",
            "5-GREEN|Immediately"
          ]
        },
        {
          "name": "COMPLIANCE",
          "title": "Does the application have any legal compliance requirements? e.g. PCI, HIPPA etc. Does the application have any licensing requirements? e.g. per core licensing",
          "tooltip": "sample tooltip",
          "choices": [
            "0-UNKNOWN|Unknown",
            "1-RED|High compliance requirements - both Legal and licensing",
            "2-RED|Licensing compliance - licensing servers",
            "3-AMBER|Legal compliance - distinct hardware, isolated clusters, compliance certification",
            "4-GREEN| None"
          ]
        },
        {
          "name": "ARCHTYPE",
          "title": "Which statement best describes the application architecture?",
          "tooltip": "sample tooltip",
          "choices": [
            "0-UNKNOWN|Unknown",
            "1-AMBER|Massive Monolith (high memory, high CPU) singleton deployment, vertical scale only",
            "2-AMBER|Massive Monolith (high memory, high CPU) , non singleton, complex to scale horizonatally",
            "3-AMBER|Complex Monolith -  strict runtime dependency startup order, non resilient architecture",
            "4-GREEN|Modern resilient monolith e.g. retries, circuit breaker etc",
            "5-GREEN|Independently deployable services"
          ]
        }
      ]
    },
    {
      "title": "Application Dependencies",
      "questions": [
        {
          "name": "DEPSHW",
          "title": "Does the application require specific hardware capabilities to run?",
          "tooltip": "sample tooltip",
          "choices": [
            "0-UNKNOWN|Unknown",
            "1-RED|Non X86 CPU requirements",
            "2-RED|Custom or legacy hardware required",
            "3-GREEN|GPU, specific worker node hardware requirements",
            "4-GREEN|X86 CPU architecture based"
          ]
        },
        {
          "name": "DEPSOS",
          "title": "What operating system does the application require?",
          "tooltip": "sample tooltip",
          "choices": [
            "0-UNKNOWN|Unknown",
            "1-RED|Non-supported OS - OSX,  AIX, UNIX, SOLARIS",
            "2-RED|Linux with custom kernel drivers or specific kernel version",
            "3-AMBER|Linux with custom capabilities e.g. setcomp",
            "4-AMBER|Standard Linux - root access required",
            "5-GREEN|Standard Linux - no root access required"
          ]
        },
        {
          "name": "DEPS3RD",
          "title": "Are 3rd party/Vendor components supported in containers?",
          "tooltip": "sample tooltip",
          "choices": [
            "0-UNKNOWN|Unknown",
            "1-RED|Not recommended to run component in containers",
            "2-RED|Component not supported by vendor when running in a container",
            "3-AMBER|Supported but with restricted functionality/untested",
            "4-AMBER|Supported but relies on self built images",
            "5-GREEN|Fully vendor supported, certified images available"
          ]
        },
        {
          "name": "DEPSIN",
          "title": "Dependencies - (Incoming/Northbound)",
          "comment": "How dependent are other systems on this application and how easy are they to change?",
          "tooltip": "sample tooltip",
          "choices": [
            "0-UNKNOWN|Unknown",
            "1-RED|Difficult/Expensive to change dependent systems - legacy, 3rd party, external",
            "2-AMBER|Many dependent systems, possible to change but expensive and time consuming",
            "3-GREEN|Many dependent systems, possible to change as they're internally managed",
            "4-GREEN|Internal dependencies only",
            "5-GREEN|No dependent systems"
          ]
        },
        {
          "name": "DEPSOUT",
          "title": "Dependencies - (Outgoing/Southbound)",
          "comment": "How dependent is this application on other systems?",
          "tooltip": "sample tooltip",
          "choices": [
            "0-UNKNOWN|Unknown",
            "1-RED|Availability only verified when processing traffic",
            "2-AMBER|Complex strict startup order required",
            "3-AMBER|Application not ready until dependencies are available ",
            "4-GREEN|Limited processing available if dependencies are unavailable",
            "5-GREEN|No dependencies"
          ]
        }
      ]
    },
    {
      "title": "Application Architecture",
      "questions": [
        {
          "name": "RESILIENCY",
          "title": "How resilient is the application and how well does it recover from outages/restarts?",
          "tooltip": "sample tooltip",
          "choices": [
            "0-UNKNOWN|Unknown",
            "1-RED|Application cannot be restarted cleanly and requires manual intervention",
            "2-RED|Application errors when southbound dependencies are unavailable and doesn't recover automatically",
            "3-AMBER|Application functionality limited when dependency is unavailable but recovers once dependency is available",
            "4-GREEN|Application employs resilient architecture patterns e.g. circuit breaker, retries etc ",
            "5-GREEN|Chaos Engineering principals followed, application containers randomly terminated to test resiliency"
          ]
        },
        {
          "name": "COMMS",
          "title": "How does the external world communicate with the application?",
          "tooltip": "sample tooltip",
          "choices": [
            "0-UNKNOWN|Unknown",
            "1-RED|Non-IP protocols e.g. serial, IPX, AppleTalk",
            "2-RED|IP based - hostname/ip encapsulated in payload",
            "3-AMBER|TCP/UDP Traffic without host addressing e.g. SSH ",
            "4-GREEN|TCP/UDP encapsulated in SSL with SNI header",
            "5-GREEN|Web traffic HTTP/HTTPS"
          ]
        },
        {
          "name": "STATE",
          "title": "How does the application handle internal state?",
          "tooltip": "sample tooltip",
          "choices": [
            "0-UNKNOWN|Unknown",
            "1-AMBER|Shared memory between applications",
            "2-AMBER|Managed/Coordinated externally from application e.g. external Zookeeper, data grid etc",
            "3-AMBER|State maintained in non shared, non ephemeral storage",
            "4-GREEN|Shared disk between application instances ",
            "5-GREEN|Stateless/Ephemeral container storage"
          ]
        },
        {
          "name": "HA",
          "title": "Does the application have any unusual concerns around service discovery?",
          "tooltip": "sample tooltip",
          "choices": [
            "0-UNKNOWN|Unknown",
            "1-RED|Uses proprietary discovery technologies that are not kubernetes suitable e.g. hardcoded ip addresses, custom cluster manager",
            "2-RED|Application requires restart on cluster changes to pickup new service instances",
            "3-AMBER|Service discovery compatible with kubernetes e.g. hashicorp consul, netflix eureka",
            "4-GREEN|Standard kubernetes DNS name resolution, application resilient to cluster changes "
          ]
        },
        {
          "name": "CLUSTER",
          "title": "How is the application clustered?",
          "tooltip": "sample tooltip",
          "choices": [
            "0-UNKNOWN|Unknown",
            "1-RED|Manually configured clustering mechanism e.g. static clusters",
            "2-AMBER|Application clustering mostly provided by external off-PAAS cluster manager",
            "3-GREEN|Application clustering mostly provided by application runtime platform using a kubernetes suitable mechanism",
            "5-GREEN|No application clustering required"
          ]
        }
      ]
    },
    {
      "title": "Application Observability",
      "questions": [
        {
          "name": "LOGS",
          "title": "Does the application use logging?",
          "tooltip": "sample tooltip",
          "choices": [
            "0-UNKNOWN|Unknown",
            "1-RED|No logging available, internal only with no export mechanism",
            "2-RED|Custom binary logs exposed using non-standard protocols",
            "3-AMBER|Logs exposed via syslog",
            "4-GREEN|Log entries written to filesystem",
            "5-GREEN|Configurable logging e.g. can be sent to STDOUT"
          ]
        },
        {
          "name": "METRICS",
          "title": "Does the application provide metrics?",
          "tooltip": "sample tooltip",
          "choices": [
            "0-UNKNOWN|Unknown",
            "1-AMBER|No metrics exposed",
            "2-AMBER|Internal metrics but not exposed",
            "3-AMBER|Metrics exposed via binary protocols e.g. SNMP",
            "4-GREEN|3rd party metrics solution e.g. Dynatrace, AppDynamics etc",
            "5-GREEN|Prometheus support, native kubernetes metrics, integration with autoscalers"
          ]
        },
        {
          "name": "HEALTH",
          "title": "How easy is it to determine the application health and if it's ready to handle traffic?",
          "tooltip": "sample tooltip",
          "choices": [
            "0-UNKNOWN|Unknown",
            "1-RED|No health or readyiness query functionality available",
            "2-RED|Custom watchdog process monitoring and managing the application",
            "3-AMBER|Basic application health requires semi-complex scripting",
            "4-GREEN|Scriptable liveness and readyiness probes",
            "5-GREEN|Probes execute synthetic transactions to verify application health"
          ]
        },
        {
          "name": "PROFILE",
          "title": "What best describes the applications runtime characteristics?",
          "tooltip": "sample tooltip",
          "choices": [
            "0-UNKNOWN|Unknown",
            "1-RED|Deterministic predictable real time execution requirements",
            "2-AMBER|Latency sensitive applications e.g. voice, HFT",
            "3-AMBER|High burstable memory/cpu needs",
            "4-GREEN|Controlled burstable memory/cpu needs",
            "5-GREEN|Predictable production profile"
          ]
        }
      ]
    },
    {
      "title": "Application Cross-Cutting concerns",
      "questions": [
        {
          "name": "TEST",
          "title": "What kind of testing does the application undergo?",
          "tooltip": "sample tooltip",
          "choices": [
            "0-UNKNOWN|Unknown",
            "1-RED|None, minimal manual testing only",
            "2-AMBER| Minimal automated testing, UI focused only ",
            "3-AMBER|Automated unit & regression testing, basic CI pipelines",
            "4-GREEN|Highly repeatable automated testing - Unit, Integration, smoke tests before production deployment, modern test practices followed",
            "5-GREEN|Chaos Engineering principals followed. Constant testing in production e.g. A/B, experimentation"
          ]
        },
        {
          "name": "CONFIG",
          "title": "How is the application configured?",
          "tooltip": "sample tooltip",
          "choices": [
            "0-UNKNOWN|Unknown",
            "1-RED|Configuration compiled/patched into the application at installation time, application configured via user interface",
            "2-RED|Externally stored and accessed using specific environment key e.g. hostname, ip address",
            "3-AMBER|Multiple configuration files in multiple filesystem locations",
            "4-AMBER|All environment configuration built into the application and enabled via system property at runtime",
            "5-GREEN|Configuration loaded by application from container mounted files, environment variables"
          ]
        },
        {
          "name": "SECURITY",
          "title": "How does the application acquire security credentials/certificates?",
          "tooltip": "sample tooltip",
          "choices": [
            "0-UNKNOWN|Unknown",
            "1-RED|HSM, hardware based encryption devices",
            "2-RED|Certs, Keys bound to application IP addresses, generated at runtime per application instance",
            "3-AMBER|Keys/Certs compiled into application",
            "4-GREEN|Certificates/Keys loaded via shared disk",
            "5-GREEN|Certificates/Keys loaded via files or vault integration",
            "6-GREEN|None needed"
          ]
        },
        {
          "name": "DEPLOY",
          "title": "How is the application currently deployed?",
          "tooltip": "sample tooltip",
          "choices": [
            "0-UNKNOWN|Unknown",
            "1-RED|Manual documented steps, user interface driven interaction",
            "2-RED|Manual documented steps, some basic automation",
            "3-AMBER|Simple automated deployment scripts",
            "4-AMBER|Automated deployment, but manual, complex, promotion through stages",
            "5-GREEN|Full CD Pipeline in place, promoting Applications through the stages;  B/G + Canary capable"
          ]
        },
        {
          "name": "CONTAINERS",
          "title": "How mature is the existing containerisation process, if any?",
          "tooltip": "sample tooltip",
          "choices": [
            "0-UNKNOWN|Unknown",
            "1-RED|Desktop-led container implementation designed to support running application on a laptop. Container treated like a VM with multiple services",
            "2-RED|Use of a init process within the container to manage multiple container processes that run independently but are tightly integrated",
            "3-AMBER|Naive container definition",
            "4-GREEN| Proficient with containers",
            "5-GREEN| Application containerisation not attempted as yet"
          ]
        }
      ]
    }
  ]
}
